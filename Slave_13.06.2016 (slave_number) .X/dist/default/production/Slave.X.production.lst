

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Jun 13 16:06:08 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	swtext1,local,class=CONST,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000E                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  008C                     	;# 
    52  008E                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010E                     	;# 
    69  0111                     	;# 
    70  0112                     	;# 
    71  0113                     	;# 
    72  0114                     	;# 
    73  0115                     	;# 
    74  0116                     	;# 
    75  0117                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011B                     	;# 
    80  011D                     	;# 
    81  011E                     	;# 
    82  018C                     	;# 
    83  018E                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0199                     	;# 
    94  019A                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019C                     	;# 
    98  019D                     	;# 
    99  019E                     	;# 
   100  019F                     	;# 
   101  020C                     	;# 
   102  020E                     	;# 
   103  0211                     	;# 
   104  0211                     	;# 
   105  0212                     	;# 
   106  0212                     	;# 
   107  0213                     	;# 
   108  0213                     	;# 
   109  0214                     	;# 
   110  0214                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0216                     	;# 
   115  0216                     	;# 
   116  0217                     	;# 
   117  0217                     	;# 
   118  0291                     	;# 
   119  0291                     	;# 
   120  0292                     	;# 
   121  0293                     	;# 
   122  0294                     	;# 
   123  0295                     	;# 
   124  0295                     	;# 
   125  0296                     	;# 
   126  0298                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  029B                     	;# 
   131  029C                     	;# 
   132  029D                     	;# 
   133  029E                     	;# 
   134  0311                     	;# 
   135  0311                     	;# 
   136  0312                     	;# 
   137  0313                     	;# 
   138  0318                     	;# 
   139  0318                     	;# 
   140  0319                     	;# 
   141  031A                     	;# 
   142  038C                     	;# 
   143  038E                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  039A                     	;# 
   148  039C                     	;# 
   149  039D                     	;# 
   150  039E                     	;# 
   151  039F                     	;# 
   152  0415                     	;# 
   153  0416                     	;# 
   154  0417                     	;# 
   155  041C                     	;# 
   156  041D                     	;# 
   157  041E                     	;# 
   158  0FE4                     	;# 
   159  0FE5                     	;# 
   160  0FE6                     	;# 
   161  0FE7                     	;# 
   162  0FE8                     	;# 
   163  0FE9                     	;# 
   164  0FEA                     	;# 
   165  0FEB                     	;# 
   166  0FED                     	;# 
   167  0FEE                     	;# 
   168  0FEF                     	;# 
   169                           
   170                           	psect	idataCOMMON
   171  0224                     __pidataCOMMON:	
   172                           
   173                           ;initializer for _data
   174  0224  3464               	retlw	100
   175  0225  3400               	retlw	0
   176                           
   177                           	psect	stringtext
   178  0226                     __pstringtext:	
   179  0226                     _slave_number:	
   180  0226  3401               	retlw	1
   181  0227  3400               	retlw	0
   182  0228                     __end_of_slave_number:	
   183  000B                     _INTCONbits	set	11
   184  0011                     _PIR1bits	set	17
   185  000E                     _PORTC	set	14
   186  008D                     _RCIF	set	141
   187  009D                     _ADCON0	set	157
   188  009D                     _ADCON0bits	set	157
   189  009E                     _ADCON1bits	set	158
   190  009C                     _ADRESH	set	156
   191  009B                     _ADRESL	set	155
   192  0099                     _OSCCON	set	153
   193  0091                     _PIE1bits	set	145
   194  008C                     _TRISA	set	140
   195  0470                     _TRISC0	set	1136
   196  0471                     _TRISC1	set	1137
   197  0472                     _TRISC2	set	1138
   198  011D                     _APFCON0bits	set	285
   199  0117                     _FVRCON	set	279
   200  0870                     _LATC0	set	2160
   201  0871                     _LATC1	set	2161
   202  0872                     _LATC2	set	2162
   203  019B                     _SPBRG	set	411
   204  018C                     _ANSELA	set	396
   205  019F                     _BAUDCONbits	set	415
   206  0199                     _RCREG	set	409
   207  019D                     _RCSTAbits	set	413
   208  019A                     _TXREG	set	410
   209  019E                     _TXSTAbits	set	414
   210  0CF1                     _TRMT	set	3313
   211                           
   212                           ; #config settings
   213  0000                     
   214                           	psect	cinit
   215  010A                     start_initialization:	
   216  010A                     __initialization:	
   217                           
   218                           ; Clear objects allocated to COMMON
   219  010A  01F6               	clrf	__pbssCOMMON& (0+127)
   220  010B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   221                           
   222                           ; Clear objects allocated to BANK0
   223  010C  01A6               	clrf	__pbssBANK0& (0+127)
   224  010D  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   225  010E  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   226  010F  01A9               	clrf	(__pbssBANK0+3)& (0+127)
   227                           
   228                           ; Initialize objects allocated to COMMON
   229  0110  3182  2224  3181   	fcall	__pidataCOMMON	;fetch initializer
   230  0113  00F8               	movwf	__pdataCOMMON& (0+127)
   231  0114  3182  2225         	fcall	__pidataCOMMON+1	;fetch initializer
   232  0116  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   233  0117                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0117                     __end_of__initialization:	
   237  0117  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   238  0118  0020               	movlb	0
   239  0119  3181  291B         	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  0076                     __pbssCOMMON:	
   243  0076                     _receive_data:	
   244  0076                     	ds	2
   245                           
   246                           	psect	dataCOMMON
   247  0078                     __pdataCOMMON:	
   248  0078                     _data:	
   249  0078                     	ds	2
   250                           
   251                           	psect	bssBANK0
   252  0026                     __pbssBANK0:	
   253  0026                     _temp_adc_value:	
   254  0026                     	ds	2
   255  0028                     _voltage_adc_value:	
   256  0028                     	ds	2
   257                           
   258                           	psect	cstackCOMMON
   259  0070                     __pcstackCOMMON:	
   260  0070                     ?_uart_init:	
   261  0070                     ?_uart_write:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ??_uart_write:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_uart_read:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??_uart_read:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_adc_init:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_uart:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_main:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     uart_write@data:	
   283                           ; 2 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287  0070                     	ds	1
   288  0071                     ??_uart:	
   289                           
   290                           ; 1 bytes @ 0x1
   291  0071                     	ds	5
   292                           
   293                           	psect	cstackBANK0
   294  0020                     __pcstackBANK0:	
   295  0020                     ??_uart_init:	
   296  0020                     ?_baudrate:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0020                     ??_adc_init:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0020                     ?_adc_pin_select:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0020                     ?_adc_read:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0020                     adc_pin_select@pin_number:	
   309                           ; 2 bytes @ 0x0
   310                           
   311  0020                     baudrate@baudrate:	
   312                           ; 2 bytes @ 0x0
   313                           
   314                           
   315                           ; 4 bytes @ 0x0
   316  0020                     	ds	2
   317  0022                     ??_adc_pin_select:	
   318  0022                     ??_adc_read:	
   319                           ; 1 bytes @ 0x2
   320                           
   321                           
   322                           ; 1 bytes @ 0x2
   323  0022                     	ds	1
   324  0023                     adc_read@adc_value:	
   325                           
   326                           ; 2 bytes @ 0x3
   327  0023                     	ds	1
   328  0024                     ??_baudrate:	
   329                           
   330                           ; 1 bytes @ 0x4
   331  0024                     	ds	1
   332  0025                     ??_main:	
   333                           
   334                           ; 1 bytes @ 0x5
   335  0025                     	ds	1
   336                           
   337                           	psect	maintext
   338  011B                     __pmaintext:	
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 62 in file "Slave1.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  2  116[None  ] int 
   351 ;; Registers used:
   352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : B1F/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   361 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   362 ;;Total ram usage:        1 bytes
   363 ;; Hardware stack levels required when called:    3
   364 ;; This function calls:
   365 ;;		_adc_init
   366 ;;		_adc_pin_select
   367 ;;		_adc_read
   368 ;;		_baudrate
   369 ;;		_uart_init
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  011B                     _main:	
   378                           
   379                           ;Slave1.c: 64: OSCCON = 0b01111010;
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   383  011B  307A               	movlw	122
   384  011C  0021               	movlb	1	; select bank1
   385  011D  0099               	movwf	25	;volatile
   386                           
   387                           ;Slave1.c: 66: uart_init();
   388  011E  3181  21C5  3181   	fcall	_uart_init
   389                           
   390                           ;Slave1.c: 67: baudrate(9600);
   391  0121  3000               	movlw	0
   392  0122  0020               	movlb	0	; select bank0
   393  0123  00A3               	movwf	baudrate@baudrate+3
   394  0124  3000               	movlw	0
   395  0125  00A2               	movwf	baudrate@baudrate+2
   396  0126  3025               	movlw	37
   397  0127  00A1               	movwf	baudrate@baudrate+1
   398  0128  3080               	movlw	128
   399  0129  00A0               	movwf	baudrate@baudrate
   400  012A  3181  21A8  3181   	fcall	_baudrate
   401                           
   402                           ;Slave1.c: 68: adc_init();
   403  012D  3181  21DE  3181   	fcall	_adc_init
   404                           
   405                           ;Slave1.c: 69: _delay((unsigned long)((10)*(16000000L/4000000.0)));
   406  0130  300D               	movlw	13
   407  0131  0020               	movlb	0	; select bank0
   408  0132  00A5               	movwf	??_main
   409  0133                     u197:	
   410  0133  0BA5               	decfsz	??_main,f
   411  0134  2933               	goto	u197
   412                           
   413                           ;Slave1.c: 71: TRISA = 0b00010100;
   414  0135  3014               	movlw	20
   415  0136  0021               	movlb	1	; select bank1
   416  0137  008C               	movwf	12	;volatile
   417                           
   418                           ;Slave1.c: 72: ANSELA = 0b00010100;
   419  0138  3014               	movlw	20
   420  0139  0023               	movlb	3	; select bank3
   421  013A  008C               	movwf	12	;volatile
   422                           
   423                           ;Slave1.c: 73: PORTC = 0x00;
   424  013B  0020               	movlb	0	; select bank0
   425  013C  018E               	clrf	14	;volatile
   426                           
   427                           ;Slave1.c: 74: TRISC0 = 0;
   428  013D  0021               	movlb	1	; select bank1
   429  013E  100E               	bcf	14,0	;volatile
   430                           
   431                           ;Slave1.c: 75: TRISC1 = 0;
   432  013F  108E               	bcf	14,1	;volatile
   433                           
   434                           ;Slave1.c: 76: TRISC2 = 0;
   435  0140  110E               	bcf	14,2	;volatile
   436  0141                     l1220:	
   437                           ;Slave1.c: 79: while(1){
   438                           
   439                           
   440                           ;Slave1.c: 81: LATC0 = 1;
   441  0141  0022               	movlb	2	; select bank2
   442  0142  140E               	bsf	14,0	;volatile
   443                           
   444                           ;Slave1.c: 83: adc_pin_select(2);
   445  0143  3002               	movlw	2
   446  0144  0020               	movlb	0	; select bank0
   447  0145  00A0               	movwf	adc_pin_select@pin_number
   448  0146  3000               	movlw	0
   449  0147  00A1               	movwf	adc_pin_select@pin_number+1
   450  0148  3181  2176  3181   	fcall	_adc_pin_select
   451                           
   452                           ;Slave1.c: 84: _delay((unsigned long)((10)*(16000000L/4000000.0)));
   453  014B  300D               	movlw	13
   454  014C  0020               	movlb	0	; select bank0
   455  014D  00A5               	movwf	??_main
   456  014E                     u207:	
   457  014E  0BA5               	decfsz	??_main,f
   458  014F  294E               	goto	u207
   459                           
   460                           ;Slave1.c: 85: voltage_adc_value = adc_read();
   461  0150  3181  21F3  3181   	fcall	_adc_read
   462  0153  0020               	movlb	0	; select bank0
   463  0154  0821               	movf	?_adc_read+1,w
   464  0155  00A9               	movwf	_voltage_adc_value+1
   465  0156  0820               	movf	?_adc_read,w
   466  0157  00A8               	movwf	_voltage_adc_value
   467                           
   468                           ;Slave1.c: 86: _delay((unsigned long)((10)*(16000000L/4000000.0)));
   469  0158  300D               	movlw	13
   470  0159  00A5               	movwf	??_main
   471  015A                     u217:	
   472  015A  0BA5               	decfsz	??_main,f
   473  015B  295A               	goto	u217
   474                           
   475                           ;Slave1.c: 87: adc_pin_select(3);
   476  015C  3003               	movlw	3
   477  015D  0020               	movlb	0	; select bank0
   478  015E  00A0               	movwf	adc_pin_select@pin_number
   479  015F  3000               	movlw	0
   480  0160  00A1               	movwf	adc_pin_select@pin_number+1
   481  0161  3181  2176  3181   	fcall	_adc_pin_select
   482                           
   483                           ;Slave1.c: 88: _delay((unsigned long)((10)*(16000000L/4000000.0)));
   484  0164  300D               	movlw	13
   485  0165  0020               	movlb	0	; select bank0
   486  0166  00A5               	movwf	??_main
   487  0167                     u227:	
   488  0167  0BA5               	decfsz	??_main,f
   489  0168  2967               	goto	u227
   490                           
   491                           ;Slave1.c: 89: temp_adc_value = adc_read();
   492  0169  3181  21F3  3181   	fcall	_adc_read
   493  016C  0020               	movlb	0	; select bank0
   494  016D  0821               	movf	?_adc_read+1,w
   495  016E  00A7               	movwf	_temp_adc_value+1
   496  016F  0820               	movf	?_adc_read,w
   497  0170  00A6               	movwf	_temp_adc_value
   498                           
   499                           ;Slave1.c: 90: _delay((unsigned long)((10)*(16000000L/4000000.0)));
   500  0171  300D               	movlw	13
   501  0172  00A5               	movwf	??_main
   502  0173                     u237:	
   503  0173  0BA5               	decfsz	??_main,f
   504  0174  2973               	goto	u237
   505  0175  2941               	goto	l1220
   506  0176                     __end_of_main:	
   507                           
   508                           	psect	text1
   509  01C5                     __ptext1:	
   510 ;; *************** function _uart_init *****************
   511 ;; Defined at:
   512 ;;		line 1 in file "16f1825_uart_lib.h"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		None
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:    2
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _uart_init
   542  01C5                     _uart_init:	
   543                           
   544                           ;16f1825_uart_lib.h: 3: APFCON0bits.RXDTSEL = 0;
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _uart_init: []
   548  01C5  0022               	movlb	2	; select bank2
   549  01C6  139D               	bcf	29,7	;volatile
   550                           
   551                           ;16f1825_uart_lib.h: 4: APFCON0bits.TXCKSEL = 0;
   552  01C7  111D               	bcf	29,2	;volatile
   553                           
   554                           ;16f1825_uart_lib.h: 7: TXSTAbits.TX9 = 0;
   555  01C8  0023               	movlb	3	; select bank3
   556  01C9  131E               	bcf	30,6	;volatile
   557                           
   558                           ;16f1825_uart_lib.h: 8: TXSTAbits.TXEN = 1;
   559  01CA  169E               	bsf	30,5	;volatile
   560                           
   561                           ;16f1825_uart_lib.h: 9: TXSTAbits.SYNC = 0;
   562  01CB  121E               	bcf	30,4	;volatile
   563                           
   564                           ;16f1825_uart_lib.h: 10: TXSTAbits.SENDB = 0;
   565  01CC  119E               	bcf	30,3	;volatile
   566                           
   567                           ;16f1825_uart_lib.h: 11: TXSTAbits.BRGH = 0;
   568  01CD  111E               	bcf	30,2	;volatile
   569                           
   570                           ;16f1825_uart_lib.h: 14: RCSTAbits.SPEN = 1;
   571  01CE  179D               	bsf	29,7	;volatile
   572                           
   573                           ;16f1825_uart_lib.h: 15: RCSTAbits.RX9 = 0;
   574  01CF  131D               	bcf	29,6	;volatile
   575                           
   576                           ;16f1825_uart_lib.h: 16: RCSTAbits.CREN = 1;
   577  01D0  161D               	bsf	29,4	;volatile
   578                           
   579                           ;16f1825_uart_lib.h: 17: RCSTAbits.FERR = 0;
   580  01D1  111D               	bcf	29,2	;volatile
   581                           
   582                           ;16f1825_uart_lib.h: 18: RCSTAbits.OERR = 0;
   583  01D2  109D               	bcf	29,1	;volatile
   584                           
   585                           ;16f1825_uart_lib.h: 21: BAUDCONbits.ABDOVF = 1;
   586  01D3  179F               	bsf	31,7	;volatile
   587                           
   588                           ;16f1825_uart_lib.h: 22: BAUDCONbits.RCIDL = 0;
   589  01D4  131F               	bcf	31,6	;volatile
   590                           
   591                           ;16f1825_uart_lib.h: 23: BAUDCONbits.SCKP = 0;
   592  01D5  121F               	bcf	31,4	;volatile
   593                           
   594                           ;16f1825_uart_lib.h: 24: BAUDCONbits.BRG16 = 0;
   595  01D6  119F               	bcf	31,3	;volatile
   596                           
   597                           ;16f1825_uart_lib.h: 25: BAUDCONbits.WUE = 0;
   598  01D7  109F               	bcf	31,1	;volatile
   599                           
   600                           ;16f1825_uart_lib.h: 26: BAUDCONbits.ABDEN = 0;
   601  01D8  101F               	bcf	31,0	;volatile
   602                           
   603                           ;16f1825_uart_lib.h: 32: PIE1bits.RCIE = 1;
   604  01D9  0021               	movlb	1	; select bank1
   605  01DA  1691               	bsf	17,5	;volatile
   606                           
   607                           ;16f1825_uart_lib.h: 33: INTCONbits.GIE = 1;
   608  01DB  178B               	bsf	11,7	;volatile
   609                           
   610                           ;16f1825_uart_lib.h: 34: INTCONbits.PEIE = 1;
   611  01DC  170B               	bsf	11,6	;volatile
   612  01DD  0008               	return
   613  01DE                     __end_of_uart_init:	
   614                           
   615                           	psect	text2
   616  01A8                     __ptext2:	
   617 ;; *************** function _baudrate *****************
   618 ;; Defined at:
   619 ;;		line 38 in file "16f1825_uart_lib.h"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  baudrate        4    0[BANK0 ] long 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   633 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   636 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   637 ;;Total ram usage:        4 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    2
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _baudrate
   649  01A8                     _baudrate:	
   650                           
   651                           ;16f1825_uart_lib.h: 40: switch(baudrate){
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _baudrate: [wreg-fsr0h+status,2+status,0]
   655  01A8  29AF               	goto	l1134
   656  01A9                     l65:	
   657                           ;16f1825_uart_lib.h: 41: case 9600 :
   658                           
   659                           
   660                           ;16f1825_uart_lib.h: 42: SPBRG = 25;
   661  01A9  3000               	movlw	0
   662  01AA  0023               	movlb	3	; select bank3
   663  01AB  009C               	movwf	28	;volatile
   664  01AC  3019               	movlw	25
   665  01AD  009B               	movwf	27	;volatile
   666                           
   667                           ;16f1825_uart_lib.h: 44: }
   668                           
   669                           ;16f1825_uart_lib.h: 43: break;
   670  01AE  0008               	return
   671  01AF                     l1134:	
   672                           
   673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   674                           ; Switch size 1, requested type "space"
   675                           ; Number of cases is 1, Range of values is 0 to 0
   676                           ; switch strategies available:
   677                           ; Name         Instructions Cycles
   678                           ; simple_byte            4     3 (average)
   679                           ; direct_byte            8     6 (fixed)
   680                           ; jumptable            260     6 (fixed)
   681                           ;	Chosen strategy is simple_byte
   682  01AF  0020               	movlb	0	; select bank0
   683  01B0  0823               	movf	baudrate@baudrate+3,w
   684  01B1  3A00               	xorlw	0	; case 0
   685  01B2  1903               	skipnz
   686  01B3  29BF               	goto	l1340
   687  01B4  29C4               	goto	l67
   688  01B5                     l1338:	
   689                           
   690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   691                           ; Switch size 1, requested type "space"
   692                           ; Number of cases is 1, Range of values is 37 to 37
   693                           ; switch strategies available:
   694                           ; Name         Instructions Cycles
   695                           ; simple_byte            4     3 (average)
   696                           ; direct_byte           11     9 (fixed)
   697                           ; jumptable            263     9 (fixed)
   698                           ;	Chosen strategy is simple_byte
   699  01B5  0821               	movf	baudrate@baudrate+1,w
   700  01B6  3A25               	xorlw	37	; case 37
   701  01B7  1903               	skipnz
   702  01B8  29BA               	goto	l1342
   703  01B9  29C4               	goto	l67
   704  01BA                     l1342:	
   705                           
   706                           ; Switch size 1, requested type "space"
   707                           ; Number of cases is 1, Range of values is 128 to 128
   708                           ; switch strategies available:
   709                           ; Name         Instructions Cycles
   710                           ; simple_byte            4     3 (average)
   711                           ; direct_byte           11     9 (fixed)
   712                           ; jumptable            263     9 (fixed)
   713                           ;	Chosen strategy is simple_byte
   714  01BA  0820               	movf	baudrate@baudrate,w
   715  01BB  3A80               	xorlw	128	; case 128
   716  01BC  1903               	skipnz
   717  01BD  29A9               	goto	l65
   718  01BE  29C4               	goto	l67
   719  01BF                     l1340:	
   720                           
   721                           ; Switch size 1, requested type "space"
   722                           ; Number of cases is 1, Range of values is 0 to 0
   723                           ; switch strategies available:
   724                           ; Name         Instructions Cycles
   725                           ; simple_byte            4     3 (average)
   726                           ; direct_byte            8     6 (fixed)
   727                           ; jumptable            260     6 (fixed)
   728                           ;	Chosen strategy is simple_byte
   729  01BF  0822               	movf	baudrate@baudrate+2,w
   730  01C0  3A00               	xorlw	0	; case 0
   731  01C1  1903               	skipnz
   732  01C2  29B5               	goto	l1338
   733  01C3  29C4               	goto	l67
   734  01C4                     l67:	
   735  01C4  0008               	return
   736  01C5                     __end_of_baudrate:	
   737                           
   738                           	psect	text3
   739  01F3                     __ptext3:	
   740 ;; *************** function _adc_read *****************
   741 ;; Defined at:
   742 ;;		line 57 in file "16f1825_adc_lib.h"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  adc_value       2    3[BANK0 ] int 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2    0[BANK0 ] int 
   749 ;; Registers used:
   750 ;;		wreg
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   759 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   760 ;;Total ram usage:        5 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    2
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _adc_read
   772  01F3                     _adc_read:	
   773                           
   774                           ;16f1825_adc_lib.h: 58: int adc_value;
   775                           ;16f1825_adc_lib.h: 60: ADCON0bits.GO_nDONE = 1;
   776                           
   777                           ;incstack = 0
   778                           ; Regs used in _adc_read: [wreg]
   779  01F3  0021               	movlb	1	; select bank1
   780  01F4  149D               	bsf	29,1	;volatile
   781                           
   782                           ;16f1825_adc_lib.h: 61: _delay((unsigned long)((10)*(16000000L/4000000.0)));
   783  01F5  300D               	movlw	13
   784  01F6  0020               	movlb	0	; select bank0
   785  01F7  00A2               	movwf	??_adc_read
   786  01F8                     u247:	
   787  01F8  0BA2               	decfsz	??_adc_read,f
   788  01F9  29F8               	goto	u247
   789                           
   790                           ;16f1825_adc_lib.h: 62: adc_value = (ADRESH<<8) +ADRESL;
   791  01FA  0021               	movlb	1	; select bank1
   792  01FB  081C               	movf	28,w	;volatile
   793  01FC  0020               	movlb	0	; select bank0
   794  01FD  00A4               	movwf	adc_read@adc_value+1
   795  01FE  0021               	movlb	1	; select bank1
   796  01FF  081B               	movf	27,w	;volatile
   797  0200  0020               	movlb	0	; select bank0
   798  0201  00A3               	movwf	adc_read@adc_value
   799                           
   800                           ;16f1825_adc_lib.h: 64: return adc_value;
   801  0202  0824               	movf	adc_read@adc_value+1,w
   802  0203  00A1               	movwf	?_adc_read+1
   803  0204  0823               	movf	adc_read@adc_value,w
   804  0205  00A0               	movwf	?_adc_read
   805  0206  0008               	return
   806  0207                     __end_of_adc_read:	
   807                           
   808                           	psect	text4
   809  0176                     __ptext4:	
   810 ;; *************** function _adc_pin_select *****************
   811 ;; Defined at:
   812 ;;		line 15 in file "16f1825_adc_lib.h"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  pin_number      2    0[BANK0 ] int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   829 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    2
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _adc_pin_select
   842  0176                     _adc_pin_select:	
   843                           
   844                           ;16f1825_adc_lib.h: 17: switch(pin_number){
   845                           
   846                           ;incstack = 0
   847                           ; Regs used in _adc_pin_select: [wreg-fsr0h+status,2+status,0]
   848  0176  2997               	goto	l1182
   849  0177                     l1164:	
   850                           ;16f1825_adc_lib.h: 18: case 0 :
   851                           
   852                           
   853                           ;16f1825_adc_lib.h: 19: ADCON0 = 0b00000001;
   854  0177  3001               	movlw	1
   855  0178  0021               	movlb	1	; select bank1
   856  0179  009D               	movwf	29	;volatile
   857                           
   858                           ;16f1825_adc_lib.h: 20: break ;
   859  017A  0008               	return
   860  017B                     l1166:	
   861                           ;16f1825_adc_lib.h: 22: case 1 :
   862                           
   863                           
   864                           ;16f1825_adc_lib.h: 23: ADCON0 = 0b00000101;
   865  017B  3005               	movlw	5
   866  017C  0021               	movlb	1	; select bank1
   867  017D  009D               	movwf	29	;volatile
   868                           
   869                           ;16f1825_adc_lib.h: 24: break ;
   870  017E  0008               	return
   871  017F                     l1168:	
   872                           ;16f1825_adc_lib.h: 26: case 2 :
   873                           
   874                           
   875                           ;16f1825_adc_lib.h: 27: ADCON0 = 0b00001001;
   876  017F  3009               	movlw	9
   877  0180  0021               	movlb	1	; select bank1
   878  0181  009D               	movwf	29	;volatile
   879                           
   880                           ;16f1825_adc_lib.h: 28: break ;
   881  0182  0008               	return
   882  0183                     l1170:	
   883                           ;16f1825_adc_lib.h: 30: case 3 :
   884                           
   885                           
   886                           ;16f1825_adc_lib.h: 31: ADCON0 = 0b00001101;
   887  0183  300D               	movlw	13
   888  0184  0021               	movlb	1	; select bank1
   889  0185  009D               	movwf	29	;volatile
   890                           
   891                           ;16f1825_adc_lib.h: 32: break ;
   892  0186  0008               	return
   893  0187                     l1172:	
   894                           ;16f1825_adc_lib.h: 34: case 4 :
   895                           
   896                           
   897                           ;16f1825_adc_lib.h: 35: ADCON0 = 0b00010001;
   898  0187  3011               	movlw	17
   899  0188  0021               	movlb	1	; select bank1
   900  0189  009D               	movwf	29	;volatile
   901                           
   902                           ;16f1825_adc_lib.h: 36: break ;
   903  018A  0008               	return
   904  018B                     l1174:	
   905                           ;16f1825_adc_lib.h: 38: case 5 :
   906                           
   907                           
   908                           ;16f1825_adc_lib.h: 39: ADCON0 = 0b00010101;
   909  018B  3015               	movlw	21
   910  018C  0021               	movlb	1	; select bank1
   911  018D  009D               	movwf	29	;volatile
   912                           
   913                           ;16f1825_adc_lib.h: 40: break ;
   914  018E  0008               	return
   915  018F                     l1176:	
   916                           ;16f1825_adc_lib.h: 42: case 6 :
   917                           
   918                           
   919                           ;16f1825_adc_lib.h: 43: ADCON0 = 0b00011001;
   920  018F  3019               	movlw	25
   921  0190  0021               	movlb	1	; select bank1
   922  0191  009D               	movwf	29	;volatile
   923                           
   924                           ;16f1825_adc_lib.h: 44: break ;
   925  0192  0008               	return
   926  0193                     l1178:	
   927                           ;16f1825_adc_lib.h: 46: case 7 :
   928                           
   929                           
   930                           ;16f1825_adc_lib.h: 47: ADCON0 = 0b00011101;
   931  0193  301D               	movlw	29
   932  0194  0021               	movlb	1	; select bank1
   933  0195  009D               	movwf	29	;volatile
   934                           
   935                           ;16f1825_adc_lib.h: 51: }
   936                           
   937                           ;16f1825_adc_lib.h: 48: break ;
   938  0196  0008               	return
   939  0197                     l1182:	
   940                           
   941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   942                           ; Switch size 1, requested type "space"
   943                           ; Number of cases is 1, Range of values is 0 to 0
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte            4     3 (average)
   947                           ; direct_byte            8     6 (fixed)
   948                           ; jumptable            260     6 (fixed)
   949                           ;	Chosen strategy is simple_byte
   950  0197  0020               	movlb	0	; select bank0
   951  0198  0821               	movf	adc_pin_select@pin_number+1,w
   952  0199  3A00               	xorlw	0	; case 0
   953  019A  1903               	skipnz
   954  019B  299D               	goto	l1344
   955  019C  29A7               	goto	l95
   956  019D                     l1344:	
   957                           
   958                           ; Switch size 1, requested type "space"
   959                           ; Number of cases is 8, Range of values is 0 to 7
   960                           ; switch strategies available:
   961                           ; Name         Instructions Cycles
   962                           ; direct_byte           22     6 (fixed)
   963                           ; simple_byte           25    13 (average)
   964                           ; jumptable            260     6 (fixed)
   965                           ;	Chosen strategy is direct_byte
   966  019D  0820               	movf	adc_pin_select@pin_number,w
   967  019E  0084               	movwf	4
   968  019F  3008               	movlw	8
   969  01A0  0204               	subwf	4,w
   970  01A1  1803               	skipnc
   971  01A2  0008               	return
   972  01A3  3182               	movlp	high S1346
   973  01A4  3504               	lslf	4,w
   974  01A5  3E07               	addlw	low S1346
   975  01A6  0082               	movwf	2
   976  01A7                     l95:	
   977  01A7  0008               	return
   978  01A8                     __end_of_adc_pin_select:	
   979                           
   980                           	psect	swtext1
   981  0207                     __pswtext1:	
   982  0207                     S1346:	
   983  0207  3181  2977         	ljmp	l1164
   984  0209  3181  297B         	ljmp	l1166
   985  020B  3181  297F         	ljmp	l1168
   986  020D  3181  2983         	ljmp	l1170
   987  020F  3181  2987         	ljmp	l1172
   988  0211  3181  298B         	ljmp	l1174
   989  0213  3181  298F         	ljmp	l1176
   990  0215  3181  2993         	ljmp	l1178
   991                           
   992                           	psect	text5
   993  01DE                     __ptext5:	
   994 ;; *************** function _adc_init *****************
   995 ;; Defined at:
   996 ;;		line 1 in file "16f1825_adc_lib.h"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1013 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1014 ;;Total ram usage:        1 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    2
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _adc_init
  1026  01DE                     _adc_init:	
  1027                           
  1028                           ;16f1825_adc_lib.h: 3: FVRCON = 0b11000010;
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1032  01DE  30C2               	movlw	194
  1033  01DF  0022               	movlb	2	; select bank2
  1034  01E0  0097               	movwf	23	;volatile
  1035                           
  1036                           ;16f1825_adc_lib.h: 5: ADCON1bits.ADFM = 1;
  1037  01E1  0021               	movlb	1	; select bank1
  1038  01E2  179E               	bsf	30,7	;volatile
  1039                           
  1040                           ;16f1825_adc_lib.h: 6: ADCON1bits.ADCS = 0b110;
  1041  01E3  081E               	movf	30,w	;volatile
  1042  01E4  398F               	andlw	-113
  1043  01E5  3860               	iorlw	96
  1044  01E6  009E               	movwf	30	;volatile
  1045                           
  1046                           ;16f1825_adc_lib.h: 7: ADCON1bits.ADNREF = 0;
  1047  01E7  111E               	bcf	30,2	;volatile
  1048                           
  1049                           ;16f1825_adc_lib.h: 8: ADCON1bits.ADPREF = 0b11;
  1050  01E8  3003               	movlw	3
  1051  01E9  049E               	iorwf	30,f	;volatile
  1052                           
  1053                           ;16f1825_adc_lib.h: 9: _delay((unsigned long)((10)*(16000000L/4000000.0)));
  1054  01EA  300D               	movlw	13
  1055  01EB  0020               	movlb	0	; select bank0
  1056  01EC  00A0               	movwf	??_adc_init
  1057  01ED                     u257:	
  1058  01ED  0BA0               	decfsz	??_adc_init,f
  1059  01EE  29ED               	goto	u257
  1060                           
  1061                           ;16f1825_adc_lib.h: 10: ADCON0bits.ADON = 1;
  1062  01EF  0021               	movlb	1	; select bank1
  1063  01F0  141D               	bsf	29,0	;volatile
  1064                           
  1065                           ;16f1825_adc_lib.h: 11: ADCON0bits.GO_nDONE = 0;
  1066  01F1  109D               	bcf	29,1	;volatile
  1067  01F2  0008               	return
  1068  01F3                     __end_of_adc_init:	
  1069                           
  1070                           	psect	intentry
  1071  0004                     __pintentry:	
  1072 ;; *************** function _uart *****************
  1073 ;; Defined at:
  1074 ;;		line 14 in file "Slave1.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1091 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1092 ;;Total ram usage:        5 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    1
  1095 ;; This function calls:
  1096 ;;		_uart_read
  1097 ;;		_uart_write
  1098 ;; This function is called by:
  1099 ;;		Interrupt level 1
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103  0004                     _uart:	
  1104                           
  1105                           ;incstack = 0
  1106                           ; Regs used in _uart: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1107  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1108  0005  3180               	pagesel	$
  1109  0006  0020               	movlb	0	; select bank0
  1110  0007  087F               	movf	127,w
  1111  0008  00F5               	movwf	??_uart+4
  1112                           
  1113                           ;Slave1.c: 15: if (RCIF){
  1114  0009  1E91               	btfss	17,5	;volatile
  1115  000A  2903               	goto	i1l114
  1116                           
  1117                           ;Slave1.c: 16: PIR1bits.RCIF = 0;
  1118  000B  1291               	bcf	17,5	;volatile
  1119                           
  1120                           ;Slave1.c: 18: receive_data = uart_read();
  1121  000C  3182  221E  3180   	fcall	_uart_read
  1122  000F  00F1               	movwf	??_uart
  1123  0010  01F2               	clrf	??_uart+1
  1124  0011  0871               	movf	??_uart,w
  1125  0012  00F6               	movwf	_receive_data
  1126  0013  0872               	movf	??_uart+1,w
  1127  0014  00F7               	movwf	_receive_data+1
  1128                           
  1129                           ;Slave1.c: 20: if(receive_data == 100 + slave_number){
  1130  0015  3026               	movlw	low (_slave_number| (0+32768))
  1131  0016  0084               	movwf	4
  1132  0017  3082               	movlw	high (_slave_number| (0+32768))
  1133  0018  0085               	movwf	5
  1134  0019  3F00               	moviw [0]fsr0
  1135  001A  00F1               	movwf	??_uart
  1136  001B  3F01               	moviw [1]fsr0
  1137  001C  00F2               	movwf	??_uart+1
  1138  001D  0871               	movf	??_uart,w
  1139  001E  3E64               	addlw	100
  1140  001F  00F3               	movwf	??_uart+2
  1141  0020  3000               	movlw	0
  1142  0021  3D72               	addwfc	??_uart+1,w
  1143  0022  00F4               	movwf	??_uart+3
  1144  0023  0877               	movf	_receive_data+1,w
  1145  0024  0674               	xorwf	??_uart+3,w
  1146  0025  1D03               	skipz
  1147  0026  2829               	goto	u13_25
  1148  0027  0876               	movf	_receive_data,w
  1149  0028  0673               	xorwf	??_uart+2,w
  1150  0029                     u13_25:	
  1151  0029  1D03               	skipz
  1152  002A  288C               	goto	i1l964
  1153                           
  1154                           ;Slave1.c: 21: LATC1 = 1;
  1155  002B  0022               	movlb	2	; select bank2
  1156  002C  148E               	bsf	14,1	;volatile
  1157                           
  1158                           ;Slave1.c: 22: LATC2 = 0;
  1159  002D  110E               	bcf	14,2	;volatile
  1160                           
  1161                           ;Slave1.c: 25: uart_write(100 + slave_number);
  1162  002E  3026               	movlw	low (_slave_number| (0+32768))
  1163  002F  0084               	movwf	4
  1164  0030  3082               	movlw	high (_slave_number| (0+32768))
  1165  0031  0085               	movwf	5
  1166  0032  0800               	movf	0,w	;code access
  1167  0033  3E64               	addlw	100
  1168  0034  3182  2217  3180   	fcall	_uart_write
  1169                           
  1170                           ;Slave1.c: 26: uart_write(voltage_adc_value>>8);
  1171  0037  0020               	movlb	0	; select bank0
  1172  0038  0829               	movf	_voltage_adc_value+1,w
  1173  0039  3182  2217  3180   	fcall	_uart_write
  1174                           
  1175                           ;Slave1.c: 27: uart_write(voltage_adc_value>>4&0xF);
  1176  003C  0020               	movlb	0	; select bank0
  1177  003D  0829               	movf	_voltage_adc_value+1,w
  1178  003E  00F2               	movwf	??_uart+1
  1179  003F  0828               	movf	_voltage_adc_value,w
  1180  0040  00F1               	movwf	??_uart
  1181  0041  3004               	movlw	4
  1182  0042  00F3               	movwf	??_uart+2
  1183  0043                     u14_25:	
  1184  0043  0D72               	rlf	??_uart+1,w
  1185  0044  0CF2               	rrf	??_uart+1,f
  1186  0045  0CF1               	rrf	??_uart,f
  1187  0046  0BF3               	decfsz	??_uart+2,f
  1188  0047  2843               	goto	u14_25
  1189  0048  0871               	movf	??_uart,w
  1190  0049  390F               	andlw	15
  1191  004A  3182  2217  3180   	fcall	_uart_write
  1192                           
  1193                           ;Slave1.c: 28: uart_write(voltage_adc_value & 0xF);
  1194  004D  0020               	movlb	0	; select bank0
  1195  004E  0828               	movf	_voltage_adc_value,w
  1196  004F  390F               	andlw	15
  1197  0050  3182  2217  3180   	fcall	_uart_write
  1198                           
  1199                           ;Slave1.c: 29: uart_write(100+ slave_number);
  1200  0053  3026               	movlw	low (_slave_number| (0+32768))
  1201  0054  0084               	movwf	4
  1202  0055  3082               	movlw	high (_slave_number| (0+32768))
  1203  0056  0085               	movwf	5
  1204  0057  0800               	movf	0,w	;code access
  1205  0058  3E64               	addlw	100
  1206  0059  3182  2217  3180   	fcall	_uart_write
  1207                           
  1208                           ;Slave1.c: 31: uart_write(200 + slave_number);
  1209  005C  3026               	movlw	low (_slave_number| (0+32768))
  1210  005D  0084               	movwf	4
  1211  005E  3082               	movlw	high (_slave_number| (0+32768))
  1212  005F  0085               	movwf	5
  1213  0060  0800               	movf	0,w	;code access
  1214  0061  3EC8               	addlw	200
  1215  0062  3182  2217  3180   	fcall	_uart_write
  1216                           
  1217                           ;Slave1.c: 32: uart_write(temp_adc_value>>8);
  1218  0065  0020               	movlb	0	; select bank0
  1219  0066  0827               	movf	_temp_adc_value+1,w
  1220  0067  3182  2217  3180   	fcall	_uart_write
  1221                           
  1222                           ;Slave1.c: 33: uart_write(temp_adc_value>>4&0xF);
  1223  006A  0020               	movlb	0	; select bank0
  1224  006B  0827               	movf	_temp_adc_value+1,w
  1225  006C  00F2               	movwf	??_uart+1
  1226  006D  0826               	movf	_temp_adc_value,w
  1227  006E  00F1               	movwf	??_uart
  1228  006F  3004               	movlw	4
  1229  0070  00F3               	movwf	??_uart+2
  1230  0071                     u15_25:	
  1231  0071  0D72               	rlf	??_uart+1,w
  1232  0072  0CF2               	rrf	??_uart+1,f
  1233  0073  0CF1               	rrf	??_uart,f
  1234  0074  0BF3               	decfsz	??_uart+2,f
  1235  0075  2871               	goto	u15_25
  1236  0076  0871               	movf	??_uart,w
  1237  0077  390F               	andlw	15
  1238  0078  3182  2217  3180   	fcall	_uart_write
  1239                           
  1240                           ;Slave1.c: 34: uart_write(temp_adc_value & 0xF);
  1241  007B  0020               	movlb	0	; select bank0
  1242  007C  0826               	movf	_temp_adc_value,w
  1243  007D  390F               	andlw	15
  1244  007E  3182  2217  3180   	fcall	_uart_write
  1245                           
  1246                           ;Slave1.c: 35: uart_write(200 + slave_number);
  1247  0081  3026               	movlw	low (_slave_number| (0+32768))
  1248  0082  0084               	movwf	4
  1249  0083  3082               	movlw	high (_slave_number| (0+32768))
  1250  0084  0085               	movwf	5
  1251  0085  0800               	movf	0,w	;code access
  1252  0086  3EC8               	addlw	200
  1253  0087  3182  2217  3180   	fcall	_uart_write
  1254                           
  1255                           ;Slave1.c: 37: LATC1 = 0;
  1256  008A  0022               	movlb	2	; select bank2
  1257  008B  108E               	bcf	14,1	;volatile
  1258  008C                     i1l964:	
  1259                           
  1260                           ;Slave1.c: 38: }
  1261                           ;Slave1.c: 40: if(receive_data==200 + slave_number){
  1262  008C  3026               	movlw	low (_slave_number| (0+32768))
  1263  008D  0084               	movwf	4
  1264  008E  3082               	movlw	high (_slave_number| (0+32768))
  1265  008F  0085               	movwf	5
  1266  0090  3F00               	moviw [0]fsr0
  1267  0091  00F1               	movwf	??_uart
  1268  0092  3F01               	moviw [1]fsr0
  1269  0093  00F2               	movwf	??_uart+1
  1270  0094  0871               	movf	??_uart,w
  1271  0095  3EC8               	addlw	200
  1272  0096  00F3               	movwf	??_uart+2
  1273  0097  3000               	movlw	0
  1274  0098  3D72               	addwfc	??_uart+1,w
  1275  0099  00F4               	movwf	??_uart+3
  1276  009A  0877               	movf	_receive_data+1,w
  1277  009B  0674               	xorwf	??_uart+3,w
  1278  009C  1D03               	skipz
  1279  009D  28A0               	goto	u16_25
  1280  009E  0876               	movf	_receive_data,w
  1281  009F  0673               	xorwf	??_uart+2,w
  1282  00A0                     u16_25:	
  1283  00A0  1D03               	skipz
  1284  00A1  2903               	goto	i1l114
  1285                           
  1286                           ;Slave1.c: 41: LATC1 = 1;
  1287  00A2  0022               	movlb	2	; select bank2
  1288  00A3  148E               	bsf	14,1	;volatile
  1289                           
  1290                           ;Slave1.c: 42: LATC2 = 1;
  1291  00A4  150E               	bsf	14,2	;volatile
  1292                           
  1293                           ;Slave1.c: 43: LATC0 = 1;
  1294  00A5  140E               	bsf	14,0	;volatile
  1295                           
  1296                           ;Slave1.c: 45: uart_write(100+ slave_number);
  1297  00A6  3026               	movlw	low (_slave_number| (0+32768))
  1298  00A7  0084               	movwf	4
  1299  00A8  3082               	movlw	high (_slave_number| (0+32768))
  1300  00A9  0085               	movwf	5
  1301  00AA  0800               	movf	0,w	;code access
  1302  00AB  3E64               	addlw	100
  1303  00AC  3182  2217  3180   	fcall	_uart_write
  1304                           
  1305                           ;Slave1.c: 46: uart_write(voltage_adc_value>>8);
  1306  00AF  0020               	movlb	0	; select bank0
  1307  00B0  0829               	movf	_voltage_adc_value+1,w
  1308  00B1  3182  2217  3180   	fcall	_uart_write
  1309                           
  1310                           ;Slave1.c: 47: uart_write(voltage_adc_value>>4&0xF);
  1311  00B4  0020               	movlb	0	; select bank0
  1312  00B5  0829               	movf	_voltage_adc_value+1,w
  1313  00B6  00F2               	movwf	??_uart+1
  1314  00B7  0828               	movf	_voltage_adc_value,w
  1315  00B8  00F1               	movwf	??_uart
  1316  00B9  3004               	movlw	4
  1317  00BA  00F3               	movwf	??_uart+2
  1318  00BB                     u17_25:	
  1319  00BB  0D72               	rlf	??_uart+1,w
  1320  00BC  0CF2               	rrf	??_uart+1,f
  1321  00BD  0CF1               	rrf	??_uart,f
  1322  00BE  0BF3               	decfsz	??_uart+2,f
  1323  00BF  28BB               	goto	u17_25
  1324  00C0  0871               	movf	??_uart,w
  1325  00C1  390F               	andlw	15
  1326  00C2  3182  2217  3180   	fcall	_uart_write
  1327                           
  1328                           ;Slave1.c: 48: uart_write(voltage_adc_value & 0xF);
  1329  00C5  0020               	movlb	0	; select bank0
  1330  00C6  0828               	movf	_voltage_adc_value,w
  1331  00C7  390F               	andlw	15
  1332  00C8  3182  2217  3180   	fcall	_uart_write
  1333                           
  1334                           ;Slave1.c: 49: uart_write(100+slave_number);
  1335  00CB  3026               	movlw	low (_slave_number| (0+32768))
  1336  00CC  0084               	movwf	4
  1337  00CD  3082               	movlw	high (_slave_number| (0+32768))
  1338  00CE  0085               	movwf	5
  1339  00CF  0800               	movf	0,w	;code access
  1340  00D0  3E64               	addlw	100
  1341  00D1  3182  2217  3180   	fcall	_uart_write
  1342                           
  1343                           ;Slave1.c: 51: uart_write(200+ slave_number);
  1344  00D4  3026               	movlw	low (_slave_number| (0+32768))
  1345  00D5  0084               	movwf	4
  1346  00D6  3082               	movlw	high (_slave_number| (0+32768))
  1347  00D7  0085               	movwf	5
  1348  00D8  0800               	movf	0,w	;code access
  1349  00D9  3EC8               	addlw	200
  1350  00DA  3182  2217  3180   	fcall	_uart_write
  1351                           
  1352                           ;Slave1.c: 52: uart_write(temp_adc_value>>8);
  1353  00DD  0020               	movlb	0	; select bank0
  1354  00DE  0827               	movf	_temp_adc_value+1,w
  1355  00DF  3182  2217  3180   	fcall	_uart_write
  1356                           
  1357                           ;Slave1.c: 53: uart_write(temp_adc_value>>4&0xF);
  1358  00E2  0020               	movlb	0	; select bank0
  1359  00E3  0827               	movf	_temp_adc_value+1,w
  1360  00E4  00F2               	movwf	??_uart+1
  1361  00E5  0826               	movf	_temp_adc_value,w
  1362  00E6  00F1               	movwf	??_uart
  1363  00E7  3004               	movlw	4
  1364  00E8  00F3               	movwf	??_uart+2
  1365  00E9                     u18_25:	
  1366  00E9  0D72               	rlf	??_uart+1,w
  1367  00EA  0CF2               	rrf	??_uart+1,f
  1368  00EB  0CF1               	rrf	??_uart,f
  1369  00EC  0BF3               	decfsz	??_uart+2,f
  1370  00ED  28E9               	goto	u18_25
  1371  00EE  0871               	movf	??_uart,w
  1372  00EF  390F               	andlw	15
  1373  00F0  3182  2217  3180   	fcall	_uart_write
  1374                           
  1375                           ;Slave1.c: 54: uart_write(temp_adc_value & 0xF);
  1376  00F3  0020               	movlb	0	; select bank0
  1377  00F4  0826               	movf	_temp_adc_value,w
  1378  00F5  390F               	andlw	15
  1379  00F6  3182  2217  3180   	fcall	_uart_write
  1380                           
  1381                           ;Slave1.c: 55: uart_write(200+ slave_number);
  1382  00F9  3026               	movlw	low (_slave_number| (0+32768))
  1383  00FA  0084               	movwf	4
  1384  00FB  3082               	movlw	high (_slave_number| (0+32768))
  1385  00FC  0085               	movwf	5
  1386  00FD  0800               	movf	0,w	;code access
  1387  00FE  3EC8               	addlw	200
  1388  00FF  3182  2217         	fcall	_uart_write
  1389                           
  1390                           ;Slave1.c: 57: LATC1 = 0;
  1391  0101  0022               	movlb	2	; select bank2
  1392  0102  108E               	bcf	14,1	;volatile
  1393  0103                     i1l114:	
  1394  0103  0875               	movf	??_uart+4,w
  1395  0104  0020               	movlb	0	; select bank0
  1396  0105  00FF               	movwf	127
  1397  0106  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1398  0107  0009               	retfie
  1399  0108                     __end_of_uart:	
  1400                           
  1401                           	psect	text7
  1402  0217                     __ptext7:	
  1403 ;; *************** function _uart_write *****************
  1404 ;; Defined at:
  1405 ;;		line 48 in file "16f1825_uart_lib.h"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  data            1    wreg     unsigned char 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  data            1    0[COMMON] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1423 ;;Total ram usage:        1 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_uart
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _uart_write
  1434  0217                     _uart_write:	
  1435                           
  1436                           ;incstack = 0
  1437                           ; Regs used in _uart_write: [wreg]
  1438                           ;uart_write@data stored from wreg
  1439  0217  00F0               	movwf	uart_write@data
  1440  0218                     i1l70:	
  1441                           ;16f1825_uart_lib.h: 49: while(!TRMT);
  1442                           
  1443  0218  0023               	movlb	3	; select bank3
  1444  0219  1C9E               	btfss	30,1	;volatile
  1445  021A  2A18               	goto	i1l70
  1446                           
  1447                           ;16f1825_uart_lib.h: 50: TXREG = data;
  1448  021B  0870               	movf	uart_write@data,w
  1449  021C  009A               	movwf	26	;volatile
  1450  021D  0008               	return
  1451  021E                     __end_of_uart_write:	
  1452                           
  1453                           	psect	text8
  1454  021E                     __ptext8:	
  1455 ;; *************** function _uart_read *****************
  1456 ;; Defined at:
  1457 ;;		line 53 in file "16f1825_uart_lib.h"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_uart
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _uart_read
  1486  021E                     _uart_read:	
  1487  021E                     i1l76:	
  1488                           ;16f1825_uart_lib.h: 54: while(!RCIF);
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _uart_read: [wreg]
  1492                           
  1493  021E  0020               	movlb	0	; select bank0
  1494  021F  1E91               	btfss	17,5	;volatile
  1495  0220  2A1E               	goto	i1l76
  1496                           
  1497                           ;16f1825_uart_lib.h: 55: return RCREG;
  1498  0221  0023               	movlb	3	; select bank3
  1499  0222  0819               	movf	25,w	;volatile
  1500  0223  0008               	return
  1501  0224                     __end_of_uart_read:	
  1502  007E                     btemp	set	126	;btemp
  1503  007E                     int$flags	set	126
  1504  007E                     wtemp	set	126
  1505  007E                     wtemp0	set	126
  1506  0080                     wtemp1	set	128
  1507  0082                     wtemp2	set	130
  1508  0084                     wtemp3	set	132
  1509  0086                     wtemp4	set	134
  1510  0088                     wtemp5	set	136
  1511  007F                     wtemp6	set	127
  1512  007E                     ttemp	set	126
  1513  007E                     ttemp0	set	126
  1514  0081                     ttemp1	set	129
  1515  0084                     ttemp2	set	132
  1516  0087                     ttemp3	set	135
  1517  007F                     ttemp4	set	127
  1518  007E                     ltemp	set	126
  1519  007E                     ltemp0	set	126
  1520  0082                     ltemp1	set	130
  1521  0086                     ltemp2	set	134
  1522  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    2
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      6      10
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _uart in COMMON

    _uart->_uart_write

Critical Paths under _main in BANK0

    _main->_adc_read

Critical Paths under _uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _uart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _uart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _uart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _uart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _uart in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _uart in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _uart in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _uart in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _uart in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _uart in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _uart in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _uart in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     291
                                              5 BANK0      1     1      0
                           _adc_init
                     _adc_pin_select
                           _adc_read
                           _baudrate
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _baudrate                                             4     0      4      96
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      34
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_pin_select                                       2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _uart                                                 5     5      0      22
                                              1 COMMON     5     5      0
                          _uart_read
                         _uart_write
 ---------------------------------------------------------------------------------
 (3) _uart_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_pin_select
   _adc_read
   _baudrate
   _uart_init

 _uart (ROOT)
   _uart_read
   _uart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       A       5       12.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      14      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      14      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Jun 13 16:06:08 2016

                       pc 0002               __CFG_CP$OFF 0000            uart_write@data 0070  
                      l65 01A9                        l67 01C4                        l95 01A7  
                     u207 014E                       u217 015A                       u227 0167  
                     u237 0173                       u247 01F8                       u257 01ED  
            __CFG_CPD$OFF 0000                       u197 0133              __CFG_BORV$LO 0000  
                    S1346 0207              __CFG_LVP$OFF 0000                      l1220 0141  
                    l1134 01AF                      l1170 0183                      l1172 0187  
                    l1164 0177                      l1340 01BF                      l1174 018B  
                    l1166 017B                      l1182 0197                      l1342 01BA  
                    l1344 019D                      l1176 018F                      l1168 017F  
                    l1178 0193                      l1338 01B5                      _RCIF 008D  
                    i1l70 0218                      i1l76 021E                      _TRMT 0CF1  
            __CFG_WRT$OFF 0000                      _data 0078                      _main 011B  
                    _uart 0004                      fsr0h 0005                      fsr0l 0004  
                    indf0 0000                      btemp 007E                      ltemp 007E  
                    start 0108                      ttemp 007E                      wtemp 007E  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     ?_uart 0070                     _LATC0 0870  
                   _LATC1 0871                     _LATC2 0872                     i1l114 0103  
                   i1l964 008C                     _RCREG 0199                     u13_25 0029  
                   u14_25 0043                     u15_25 0071                     u16_25 00A0  
                   u17_25 00BB                     _SPBRG 019B                     u18_25 00E9  
                   _PORTC 000E                     _TRISA 008C                     _TXREG 019A  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 010A              __end_of_main 0176              __end_of_uart 0108  
                  ??_main 0025                    ??_uart 0071            __CFG_PLLEN$OFF 0000  
       _voltage_adc_value 0028                    _ADCON0 009D                    _ADRESH 009C  
                  _ADRESL 009B                    _ANSELA 018C          __end_of_adc_init 01F3  
        __end_of_adc_read 0207                    _FVRCON 0117                    _OSCCON 0099  
                  _TRISC0 0470                    _TRISC1 0471                    _TRISC2 0472  
        __end_of_baudrate 01C5            __CFG_PWRTE$OFF 0000              __pdataCOMMON 0078  
 __size_of_adc_pin_select 0032   __end_of__initialization 0117            __pcstackCOMMON 0070  
              __pbssBANK0 0026                __pmaintext 011B                __pintentry 0004  
               ?_adc_init 0070                 ?_adc_read 0020        __size_of_uart_init 0019  
      __size_of_uart_read 0006                 ?_baudrate 0020           __CFG_STVREN$OFF 0000  
              ??_adc_init 0020                ??_adc_read 0022                   __ptext1 01C5  
                 __ptext2 01A8                   __ptext3 01F3                   __ptext4 0176  
                 __ptext5 01DE                   __ptext7 0217                   __ptext8 021E  
              ??_baudrate 0024            _adc_pin_select 0176      end_of_initialization 0117  
       __end_of_uart_init 01DE         __end_of_uart_read 0224          baudrate@baudrate 0020  
               _RCSTAbits 019D              __pstringtext 0226                _uart_write 0217  
        __CFG_FOSC$INTOSC 0000    __end_of_adc_pin_select 01A8         adc_read@adc_value 0023  
          _temp_adc_value 0026                 _TXSTAbits 019E  adc_pin_select@pin_number 0020  
             _BAUDCONbits 019F             __pidataCOMMON 0224       start_initialization 010A  
         ?_adc_pin_select 0020               _APFCON0bits 011D               ?_uart_write 0070  
       __size_of_adc_init 0015         __size_of_adc_read 0014               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020         __size_of_baudrate 001D  
    __end_of_slave_number 0228                 __pswtext1 0207              _receive_data 0076  
     __size_of_uart_write 0007                  _PIE1bits 0091                  _PIR1bits 0011  
               _uart_init 01C5                 _uart_read 021E                _ADCON0bits 009D  
              _ADCON1bits 009E                ?_uart_init 0070                ?_uart_read 0070  
        ??_adc_pin_select 0022                  _adc_init 01DE                  _adc_read 01F3  
                _baudrate 01A8             __size_of_main 005B             __size_of_uart 0104  
                int$flags 007E              ??_uart_write 0070                _INTCONbits 000B  
            _slave_number 0226                  intlevel1 0000         __CFG_CLKOUTEN$OFF 0000  
      __end_of_uart_write 021E               ??_uart_init 0020               ??_uart_read 0070  
